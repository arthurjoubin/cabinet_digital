# Generated by Django 5.2 on 2025-07-03 21:02

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('excerpt', models.CharField(blank=True, max_length=200)),
                ('price', models.CharField(blank=True, max_length=200)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
                ('is_published', models.BooleanField(default=False)),
                ('site', models.URLField(blank=True)),
                ('is_top_pick', models.BooleanField(default=False)),
                ('tags', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name': 'IA - Modèle',
                'verbose_name_plural': 'IA - Modèles',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nom')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', verbose_name='Logo')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('excerpt', models.CharField(blank=True, max_length=300, verbose_name='Extrait')),
                ('website', models.URLField(blank=True, verbose_name='Site web')),
                ('is_published', models.BooleanField(default=True, verbose_name='Publié')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Entreprise / Éditeur',
                'verbose_name_plural': 'Entreprises / Éditeurs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('entreprise', models.CharField(max_length=200, verbose_name='Entreprise')),
                ('message', models.TextField(verbose_name='Message')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('traite', models.BooleanField(default=False, verbose_name='Traité')),
            ],
            options={
                'verbose_name': 'Message de contact',
                'verbose_name_plural': 'Messages de contact',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='ContactIntegrateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200, verbose_name='Nom')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('entreprise', models.CharField(max_length=200, verbose_name='Entreprise')),
                ('type_contact', models.CharField(choices=[('integrateur', 'Intégrateur'), ('editeur', 'Éditeur de logiciel'), ('autre', 'Autre')], max_length=20, verbose_name='Type de contact')),
                ('logiciel_source', models.CharField(help_text="Nom du logiciel source de l'intégration", max_length=200, verbose_name='Logiciel source')),
                ('logiciel_destination', models.CharField(help_text="Nom du logiciel destination de l'intégration", max_length=200, verbose_name='Logiciel destination')),
                ('modules_concernes', models.TextField(help_text='Quels modules comptables sont concernés par cette intégration ?', verbose_name='Modules concernés')),
                ('description', models.TextField(help_text='Décrivez votre intégration en détail', verbose_name="Description de l'intégration")),
                ('url_documentation', models.URLField(blank=True, help_text='Lien vers la documentation technique (optionnel)', verbose_name='URL de documentation')),
                ('telephone', models.CharField(blank=True, max_length=20, verbose_name='Téléphone (optionnel)')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('traite', models.BooleanField(default=False, verbose_name='Traité')),
            ],
            options={
                'verbose_name': 'Contact intégrateur',
                'verbose_name_plural': 'Contacts intégrateurs',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Integrateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('site_web', models.URLField(blank=True)),
                ('logo', models.ImageField(blank=True, upload_to='integrateurs/')),
                ('email_contact', models.EmailField(blank=True, max_length=254)),
                ('telephone', models.CharField(blank=True, max_length=20)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('actif', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Intégrateur',
                'verbose_name_plural': 'Intégrateurs',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Integrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField()),
                ('excerpt', models.CharField(blank=True, max_length=300)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='integrators/')),
                ('is_published', models.BooleanField(default=False)),
                ('is_top_pick', models.BooleanField(default=False)),
                ('site', models.URLField(blank=True)),
                ('tags', models.CharField(blank=True, help_text='Tags séparés par des virgules', max_length=500)),
            ],
            options={
                'verbose_name': 'Intégrateur',
                'verbose_name_plural': 'Intégrateurs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Metier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('seo_title', models.CharField(blank=True, help_text='Titre optimisé pour le référencement (60 caractères max)', max_length=60)),
                ('seo_description', models.CharField(blank=True, help_text='Description optimisée pour le référencement (160 caractères max)', max_length=160)),
            ],
            options={
                'verbose_name': 'Logiciels - Métiers',
                'verbose_name_plural': 'Logiciels - Métiers',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icone', models.CharField(blank=True, help_text="Nom de l'icône (ex: file-text, calculator, etc.)", max_length=50)),
                ('ordre', models.IntegerField(default=0, help_text="Ordre d'affichage")),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'ordering': ['ordre', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='PDPSpecialtyTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='Slug')),
                ('is_published', models.BooleanField(default=True, help_text='Contrôle la visibilité de la page du tag', verbose_name='Publié')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'PDP - Tag de spécialité',
                'verbose_name_plural': 'PDP - Tags de spécialité',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProviderAI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='providers/')),
                ('site', models.URLField(blank=True)),
                ('is_published', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'IA - Editeurs',
                'verbose_name_plural': 'IA - Editeurs',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True)),
                ('color', models.CharField(blank=True, max_length=50)),
                ('seo_title', models.CharField(blank=True, help_text='Titre SEO pour la page du tag', max_length=200)),
                ('seo_description', models.TextField(blank=True, help_text='Description SEO pour la page du tag', max_length=300)),
                ('seo_content', models.TextField(blank=True, help_text='Contenu SEO affiché en haut de la page du tag')),
                ('is_published', models.BooleanField(default=True, help_text='Contrôle la visibilité de la page du tag')),
            ],
            options={
                'verbose_name': 'Logiciels - Tags',
                'verbose_name_plural': 'Logiciels - Tags',
            },
        ),
        migrations.CreateModel(
            name='TypeIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': "Type d'intégration",
                'verbose_name_plural': "Types d'intégration",
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='AIArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('excerpt', models.CharField(max_length=500)),
                ('content', models.TextField()),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('slug', models.SlugField(unique=True)),
                ('is_published', models.BooleanField(default=True)),
                ('banner', models.ImageField(blank=True, null=True, upload_to='articles/banners')),
                ('tags', models.CharField(blank=True, max_length=50)),
                ('site', models.URLField(blank=True)),
                ('related_ai_models', models.ManyToManyField(blank=True, to='cabinet_digital.aimodel')),
            ],
            options={
                'verbose_name': 'IA - Article',
                'verbose_name_plural': 'IA - Articles',
            },
        ),
        migrations.AddField(
            model_name='aimodel',
            name='provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cabinet_digital.providerai'),
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('excerpt', models.CharField(blank=True, max_length=200)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/')),
                ('is_published', models.BooleanField(default=False)),
                ('site', models.URLField(blank=True)),
                ('is_top_pick', models.BooleanField(default=False)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='software_products', to='cabinet_digital.company', verbose_name='Éditeur')),
                ('metier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cabinet_digital.metier')),
            ],
            options={
                'verbose_name': 'Logiciel - Liste',
                'verbose_name_plural': 'Logiciels - Liste',
                'ordering': ['-is_top_pick', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PlatformeDematerialisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nom')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='pdp_logos/')),
                ('excerpt', models.TextField(help_text='Description de la plateforme', verbose_name='Description')),
                ('specialty', models.CharField(blank=True, help_text="Spécialité ou domaine d'expertise principal", max_length=100, verbose_name='Spécialité')),
                ('site', models.URLField(blank=True, verbose_name='Site web')),
                ('is_published', models.BooleanField(default=True, verbose_name='Publié')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pdp_platforms', to='cabinet_digital.company', verbose_name='Éditeur')),
                ('integrators', models.ManyToManyField(blank=True, related_name='pdp_platforms', to='cabinet_digital.integrator', verbose_name='Intégrateurs')),
                ('connected_softwares', models.ManyToManyField(blank=True, related_name='pdp_platforms', to='cabinet_digital.software', verbose_name='Solutions connectées')),
            ],
            options={
                'verbose_name': 'Plateforme de Dématérialisation',
                'verbose_name_plural': 'Plateformes de Dématérialisation',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='integrator',
            name='softwares',
            field=models.ManyToManyField(blank=True, related_name='integrators', to='cabinet_digital.software'),
        ),
        migrations.CreateModel(
            name='SoftwareCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField(blank=True)),
                ('is_published', models.BooleanField(default=False)),
                ('icon', models.FileField(blank=True, null=True, upload_to='icons/')),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('excerpt', models.CharField(blank=True, max_length=200)),
                ('metier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cabinet_digital.metier')),
            ],
            options={
                'verbose_name': 'Logiciels - Catégories',
                'verbose_name_plural': 'Logiciels - Catégories',
            },
        ),
        migrations.AddField(
            model_name='software',
            name='category',
            field=models.ManyToManyField(related_name='categories_softwares_link', to='cabinet_digital.softwarecategory'),
        ),
        migrations.CreateModel(
            name='Actualites',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('excerpt', models.TextField(blank=True)),
                ('slug', models.SlugField(unique=True)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_published', models.BooleanField(default=True)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='articles', to='cabinet_digital.company', verbose_name='Éditeur lié')),
                ('tags', models.ManyToManyField(blank=True, to='cabinet_digital.tag')),
            ],
            options={
                'verbose_name_plural': 'Logiciels - Actualités',
            },
        ),
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=300)),
                ('slug', models.SlugField(max_length=300, unique=True)),
                ('description', models.TextField()),
                ('fonctionnalites', models.TextField(blank=True, help_text='Liste des fonctionnalités, une par ligne')),
                ('prix', models.CharField(blank=True, help_text='Ex: À partir de 50€/mois', max_length=200)),
                ('url_documentation', models.URLField(blank=True, verbose_name='URL de documentation')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('actif', models.BooleanField(default=True)),
                ('integrateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to='cabinet_digital.integrateur')),
                ('modules', models.ManyToManyField(blank=True, help_text='Modules comptables concernés par cette intégration', to='cabinet_digital.module', verbose_name='Modules concernés')),
                ('logiciel_destination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations_destination', to='cabinet_digital.software', verbose_name='Logiciel destination')),
                ('logiciel_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations_source', to='cabinet_digital.software', verbose_name='Logiciel source')),
                ('type_integration', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cabinet_digital.typeintegration', verbose_name="Type d'intégration")),
            ],
            options={
                'verbose_name': 'Intégration',
                'verbose_name_plural': 'Intégrations',
                'ordering': ['-date_creation'],
                'unique_together': {('logiciel_source', 'logiciel_destination', 'integrateur')},
            },
        ),
    ]
